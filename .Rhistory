rep[1]
rep<-gsub(""","",rep,fixed=TRUE)
rep<-gsub("["]","",rep,fixed=TRUE)
rep<-gsub('["]',"",rep,fixed=TRUE)
rep
rep<-gsub('"',"",rep[1])
rep
rep<-sub('"','',rep)
rep
IDSR_df
gsub('"','',IDSR_df$Village)
table(IDSR_df$District)
IDSR_df<-separate(IDSR_df$District, c("Distrct",NA), " ")
IDSR_df<-separate(IDSR_df$District, c("District",NA), " ")
library(dplyr)
IDSR_df<-separate(IDSR_df$District, c("District",NA), " ")
IDSR_df<-separate(IDSR_df$District, c("District",NA), sep = " ")
IDSR_df<-separate(IDSR_df$District, c("DistrictName",NA), sep = " ")
IDSR_df
IDSR_df<-separate(IDSR_df,IDSR_df$District,c(District,NA),sep = " ")
rlang::last_error()
IDSR_df<-separate(IDSR_df,IDSR_df$District,c(District,NA),sep = " District")
?mutate
?separate
rep<-separate(IDSR_df,IDSR_df$District[1],c("D",NA),sep = " ")
rep<-separate(IDSR_df,IDSR_df$District[1],c("D",NA),sep = "")
rep<-separate(IDSR_df,IDSR_df$District,c("D",NA),sep = "")
rep<-na_if(IDSR_df$Ditrict,"")
rep
IDSR_df$District
na_if(IDSR_df$Ditrict,"")
na_if(IDSR_df$District,"")
rep<-na_if(IDSR_df$District,"")
rep
rep<-separate(IDSR_df,IDSR_df$District,c("D",NA),sep = "")
install.packages("tidyverse")
rep<-separate(IDSR_df,IDSR_df$District,c("D",NA),sep = "")
rep<-separate(IDSR_df,IDSR_df$District,c("D","Leve"),sep = "")
IDSR_df<-separate(IDSR_df,IDSR_df$District,c("District",NA),sep = " District")
IDSR_df<-separate(IDSR_df,IDSR_df$District,c("District","Level"),sep = " District")
map_dbf<-read.dbf("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.dbf", as.is = TRUE)
library(tmap)
library(tmaptools)
library(sf)
library(foreign)
map_dbf<-read.dbf("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.dbf", as.is = TRUE)
IDSR_df<-separate(IDSR_df,IDSR_df$District,c("District","Level"),sep = " District", is.na="TRUE")
dist_sum<-table(IDSR_df$District)
dist_sum
names(dist_sum)<-c("ADM1_EN", "Value")
dist_sum
dist_sum<-data.frame(table(IDSR_df$District))
dist_sum
dist_sum<-tbl_df(data.frame(table(IDSR_df$District)))
dist_sum
separate(dist_sum,Var1,c("DistName",NA))
toupper(separate(dist_sum,Var1,c("DistName",NA)))
dist_sum<-separate(dist_sum,Var1,c("DistName",NA))
toupper(dist_sum$DistName)
summarise_all(dist_sum,sum())
summarise_all(dist_sum,funs(sum))
dist_sum
dist_sum<-group_by(dist_sum,DistName)
summarize(dist_sum)
summarize(dist_sum, Freq)
summarize(dist_sum, Freq=sum(Freq))
distUp<-mutate(disq,DistName, funs(toupper))
distUp<-mutate(dist_sum,DistName, funs(toupper))
dist_sum<-summarize(dist_sum, Freq=sum(Freq))
dist_sum
distUp<-mutate(dist_sum,DistName, funs(toupper))
distUp
distUp
dist_sum
distUp<-mutate_all(dist_sum, funs(toupper))
distUp
mutT
?mutate
IDSR_df
View(IDSR_df)
ed<-mutate(IDSR_df, District=ifelse("Organisation unit name"=="Kampala District", "Kampala District",District))
View(ed)
table(ed$District)
ed<-mutate(IDSR_df, District=ifelse(District %in% "","Kampala District",District))
ed<-mutate(IDSR_df, District=ifelse(District %in% "" & "Organisation unit name"=="Kampala District","Kampala District",District))
View(ed)
ed<-mutate(IDSR_df, District=ifelse(District %in% "","Organisation unit name",District))
ed<-mutate(IDSR_df, District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District))
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District))
IDSR_df<-as.data.frame(raw$rows) #Extract data content
names(IDSR_df)<-cnames #Add column names
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District))
table(IDSR_df$District)
IDSR_df<-as.data.frame(raw$rows) #Extract data content
names(IDSR_df)<-cnames #Add column names
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District)) %>%
mutate(District=ifelse(District %in% "Kampala" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District))
table(IDSR_df$District)
dist_sum<-table(IDSR_df$District)
names(dist_sum)<-c("ADM1_EN", "Value")
dist_sum<-tbl_df(data.frame(table(IDSR_df$District))) %>%
separate(Var1,c("DistName",NA)) %>%
group_by(DistName) %>%
summarize(Freq=sum(Freq)) %>%
mutate_all(funs(toupper))
dist_sum
rename(dist_sum, ADM1_EN=DistName)
dist_sum<-rename(dist_sum, ADM1_EN=DistName)
dbf_file<-read.dbf("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.dbf", as.is = TRUE)
head(dbf_file)
dist_sum<-rename(dist_sum, DName2019=ADM1_EN)
dbf_file<-merge(dbf_file, dist_sum, by = "DName2019", all = TRUE)
head(dbf_file)
write.dbf(dbf_file,"C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.dbf")
map_json<-rgdal::readOGR("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.geojson")
head(map_json)
leaflet(map_json) %>%
addTiles()%>%
addPolygons(weight = 1,
color = "grey",
fillColor = ~Freq,
label = ~DName2019,
highlightOptions = highlightOptions(
weight = 10,
color = "blue",
bringToFront = TRUE))
library(leaflet)
leaflet(map_json) %>%
addTiles()%>%
addPolygons(weight = 1,
color = "grey",
fillColor = ~Freq,
label = ~DName2019,
highlightOptions = highlightOptions(
weight = 10,
color = "blue",
bringToFront = TRUE))
leaflet(map_json) %>%
addTiles()%>%
addPolygons(weight = 1,
color = "grey",
fillColor = ~Freq,
highlightOptions = highlightOptions(
weight = 10,
color = "blue",
bringToFront = TRUE))
leaflet(map_json) %>%
addTiles()%>%
addPolygons(weight = 1,
color = "grey",
label = ~DName2019,
highlightOptions = highlightOptions(
weight = 10,
color = "blue",
bringToFront = TRUE))
leaflet()
addTiles()
addTiles(map_json)
leaflet(map_json)
addTiles()
addTiles(map_json)
library(leaflet)
leaflet(map_json)
addTiles()
addTiles(map_json)
library(leaflet)
map_json<-rgdal::readOGR("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/gis/Uganda_districts_2019/uganda_districts_2019_i.geojson")
leaflet(map_json)
addTiles(map_json)
library(sp)
library(maptools)
setwd("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/apps/nCoV_tracker_ug")
ug_map<-readShapePoints("./datasources/uganda_districts_2019_i.shp")
ug_map<-readShapePoly("./datasources/uganda_districts_2019_i.shp")
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
str(ug_map, max.level = 2)
str(ug_map)
head(ug_map@data)
head(ug_map@bbox)
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x,
"latin1", "UTF-8")))
plot(ug_map, col=ug_map@DName2019)
plot(ug_map, col=ug_map$DName2019)
getinfo.shape("./datasources/uganda_districts_2019_i.shp")
head(coordinates(ug_map))
plot(ug_map)
head(ug_map@data)
dist_sum
ug_map1<-ug_map
ug_map1@data<-merge(ug_map1@data, dist_sum, by = "DName2019", all = TRUE)
head(ug_map1@data)
plot(ug_map1, col = ug_map1$Freq)
install.packages("RColorBrewer")
library(RColorBrewer)
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(16)
spplot(ug_map1, "DName2019", col.regions = colors)
spplot(ug_map1, "Freq", col.regions = colors)
warnings()
spplot(ug_map1, "Freq", col.regions = colors)
head(ug_map1@data)
ug_map1@data
ug_map1@data[is.na(ug_map1@data)]=0
head(ug_map1@data)
spplot(ug_map1, "Freq", col.regions = colors)
?spplot
spplot(ug_map1, as.factor(ug_map1$Freq), col.regions = colors)
spplot(ug_map1, "DName2019", col.regions = colors, value = ug_map1$Freq)
spplot(ug_map1, "F15Regions", col.regions = colors, value = ug_map1$Freq)
ug_map1@data<-ug_map1@data[c(1,8)]
head(ug_map1@data)
spplot(ug_map1, "DName2019", col.regions = colors, value = ug_map1$Freq)
spplot(ug_map1, "Freq", col.regions = colors)
spplot(ug_map1, c("DName2019","Freq"), col.regions = colors)
spplot(ug_map1, c("Freq"), col.regions = colors)
spplot(ug_map1, c("Freq"), col.regions = colors)
spplot(ug_map1, c("DName2019"), col.regions = colors)
ug_map1$dist=factor(ug_map1$Freq, levels = ug_map1$Freq)
ug_map1$dist=factor(ug_map1$Freq, levels = ug_map1$DName2019)
cut<-cut <- cut(ug_map1$Freq, breaks = c(0, 25, 50, 75, 100, 150, 200))
cut <- cut(ug_map1$Freq, breaks = c(0, 25, 50, 75, 100, 150, 200))
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map1$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(10)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,
200), labels = colors)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map1$colors<-cutColors
head(ug_map1@data)
plot(ug_map1, col = as.character(ug_map1@data$colors))
legend("bottomright", cex = 0.7, legend = levels(ug_map1$cut), fill = colors,
title = "Suspect Cases by district")
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x, "latin1", "UTF-8"))) %>%
merge(dist_sum, by = "DName2019", all = TRUE)
ug_map@data[is.na(ug_map1@data)]=0
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map$colors<-cutColors
plot(ug_map1, col = as.character(ug_map1@data$colors))
legend("bottomright", cex = 0.7, legend = levels(ug_map1$cut), fill = colors,
title = "Suspect Case No.")
library(dplyr)
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x, "latin1", "UTF-8"))) %>%
merge(dist_sum, by = "DName2019", all = TRUE)
ug_map@data[is.na(ug_map1@data)]=0
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map$colors<-cutColors
plot(ug_map, col = as.character(ug_map@data$colors))
legend("bottomright", cex = 0.7, legend = levels(ug_map$cut), fill = colors,
title = "Suspect Case No.")
ug_map@data
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x, "latin1", "UTF-8"))) %>%
merge(dist_sum, by = "DName2019", all = TRUE)
# ug_map@data[is.na(ug_map1@data)]=0
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map$colors<-cutColors
plot(ug_map, col = as.character(ug_map@data$colors))
legend("bottomright", cex = 0.7, legend = levels(ug_map$cut), fill = colors,
title = "Suspect Case No.")
shiny::runApp()
runApp()
runApp()
library(rsconnect)
runApp()
library(rgeos)
library(rgeos)
runApp()
deployApp()
deployApp()
View(web_tbl)
library(maptools)
library(sp)
library(ggplot2)
library(tidyr)
library(dplyr)
library(httr)
library(rjson)
library(stringr)
library(RColorBrewer)
#setwd("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/apps/nCoV_tracker_ug")
#Download eIDSR data
usr<-"cdcuganda"
psw<-"Cdcug@2020"
urlA<-"https://eidsr.health.go.ug/api/29/analytics/events/query/o6TN8Sr45CZ.json?"
urlB<-"dimension=pe:THIS_YEAR&dimension=ou:akV6429SUqu&dimension=HAZ7VQ730yn&
dimension=hUvDUjcFmFB&dimension=rpkGPScBEus&dimension=bZGmeF1bpcx&dimension=FQjRK8ei8Ue&
dimension=CW4bo1xDbto&dimension=sB1IHYu2xQT&dimension=JgbTeRB32lX&dimension=oUqWGeHjj5C&
dimension=A5HreEUqgcj&dimension=Rq4qM2wKYFL&dimension=fctSQp5nAYl&dimension=j6sEr8EcULP&
dimension=g4LJbkM0R24&dimension=ttjZl7jvrRj&dimension=v24me96F6XA&dimension=Za0xkyQDpxA&
dimension=oVFYcqtwPY9&dimension=KxosXJrC3bh&dimension=Rx2fEI9zDJ3&dimension=Fs892x4qy0d&
dimension=P2gE4lKybQG&dimension=CvJsiC7uXFY&dimension=JTWovJaXgxS&dimension=s52IJ2zlEol&
dimension=IuwaCGsUr7w&dimension=jMlpubCBAqQ&dimension=TzqawmlPkI5&dimension=oomj0HzoQB5&
dimension=oPEL0yUsFJ6&dimension=mW7DtDdQBv3&dimension=v4bkZ9UZsXr&dimension=tVntAinnj0j&
dimension=y4oilvA8mVy&dimension=ymPAOiwkqT0&dimension=ypw02tLMPFQ&dimension=nsohnMrNmaF&
dimension=HcxURmewqhC&dimension=X30kPftDe6M&dimension=kWrFMAyg6Wd&dimension=qIjb1K7RBSQ&
dimension=OO9CGZqnlHg&dimension=aWmPaghPPiX&dimension=USNWlaqJYfj&dimension=SwPVr4XgPpH&
dimension=o7djkXfYZQH&dimension=xKuGAfa9VwT&dimension=oREeMbJdOOi&dimension=B459pxTvHeR&
dimension=LnR3mUby5q3&dimension=fFfdr1uvr8O&dimension=s3eoonJ8OJb&dimension=z38VCNZh0qV&
dimension=lRpToX3dhff&dimension=Nedj4eHxkDA&dimension=oR1I0GFQLeB&dimension=m7MH14roDiB&
dimension=jBkw8u7sVkG&dimension=bo5e2Y6HPK3&dimension=dA6OfHRlWwB&dimension=t1PAsSxkv0e&
dimension=R7pCw3iE9KA&dimension=a9a5FvQ1mlS&dimension=Ok06T0bZnQP&dimension=qZbnrWP7sAc&
dimension=grMYEotvVoG&dimension=EcvciwIVAtL&dimension=IUFQDU68rS6&dimension=hCZ3F0EuzdS&
dimension=VdiTxORMZ24&dimension=NxFYllr5RpU&dimension=fAefJDDlCgz&dimension=sb4e0RdaCy1&
dimension=xUX5BfGUHjG&dimension=sJeIFfhX8BE&dimension=TRanjlwhC84&dimension=zkzuwNw4Aq0&
dimension=coUb4QcuVKI&dimension=SBRCbEvwCjZ&dimension=j6LrBVzW3k4&dimension=TMwKRNAYuYB&
dimension=IGQdwCEWqxs&dimension=hcHUkwpjcDc&dimension=DbbrWq4rFPh&dimension=IliCwhlgfJq&
dimension=UmXYz5bN9is&dimension=uNNfUKaj0gY&dimension=AHlLUcC9l3T&dimension=tAqxn8xSJG5&
dimension=OY35IARTLYJ&dimension=eB3mTHxMtLe&dimension=bPBdafWqhyg&dimension=jSCr3wfmnzH&
dimension=BGIl7Un4Far&dimension=E4Z7JQV0QFt&dimension=kJHY6C05MoS&stage=ChsOd5Hb5hA&displayProperty=NAME&
outputType=EVENT&desc=eventdate&paging=false]"
eIDSRurl<-URLencode(paste0(urlA,urlB))
IDSR_raw<-httr::GET(eIDSRurl, httr::authenticate(usr,psw)) %>%
httr::content("text")
cnames<-IDSR_raw$headers[[2]] #Extract column names
IDSR_df<-as.data.frame(IDSR_raw$rows) #Extract data content
names(IDSR_df)<-cnames #Add column names
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District)) %>%
mutate(District=ifelse(District %in% "Kampala" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District))
# Suspects by district (for map)
dist_sum<-tbl_df(data.frame(table(IDSR_df$District))) %>%
separate(Var1,c("DistName",NA)) %>%
group_by(DistName) %>%
summarize(Freq=sum(Freq)) %>%
mutate_all(funs(toupper)) %>%
rename(DName2019=DistName)
#Trend line data
counts<- data.frame(table(IDSR_df$`Date of symptoms onset`))
counts$Var1<-as.Date(counts$Var1)
#Preparing Map data
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x, "latin1", "UTF-8"))) %>%
merge(dist_sum, by = "DName2019", all = TRUE)
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map$colors<-cutColors
IDSR_raw
IDSR_raw[2]
IDSR_raw<-httr::GET(eIDSRurl, httr::authenticate(usr,psw))
IDSR_raw$headers[[2]]
IDSR_raw$headers[[1]]
IDSR_raw$headers
IDSR_raw[[2]]
IDSR_raw
IDSR_raw$all_headers
IDSR_raw<-httr::content(IDSR_raw,"text")
IDSR_raw
IDSR_raw[[1]]
View(IDSR_raw)
IDSR_raw<-httr::GET(eIDSRurl, httr::authenticate(usr,psw))
raw<-jsonlite::fromJSON(IDSR_raw, flatten = TRUE)
IDSR_raw<-httr::content(IDSR_raw,"text")
raw<-jsonlite::fromJSON(IDSR_raw, flatten = TRUE)
raw$headers[[2]]
IDSR_raw<-httr::GET(eIDSRurl, httr::authenticate(usr,psw)) %>%
httr::content("text") %>%
jsonlite::fromJSON(flatten = TRUE)
cnames<-IDSR_raw$headers[[2]]
library(maptools)
library(sp)
library(ggplot2)
library(tidyr)
library(dplyr)
library(httr)
library(rjson)
library(stringr)
library(RColorBrewer)
#setwd("C:/Users/Kwezi Family/OneDrive - CDC/r/shiny/apps/nCoV_tracker_ug")
#Download eIDSR data
usr<-"cdcuganda"
psw<-"Cdcug@2020"
urlA<-"https://eidsr.health.go.ug/api/29/analytics/events/query/o6TN8Sr45CZ.json?"
urlB<-"dimension=pe:THIS_YEAR&dimension=ou:akV6429SUqu&dimension=HAZ7VQ730yn&
dimension=hUvDUjcFmFB&dimension=rpkGPScBEus&dimension=bZGmeF1bpcx&dimension=FQjRK8ei8Ue&
dimension=CW4bo1xDbto&dimension=sB1IHYu2xQT&dimension=JgbTeRB32lX&dimension=oUqWGeHjj5C&
dimension=A5HreEUqgcj&dimension=Rq4qM2wKYFL&dimension=fctSQp5nAYl&dimension=j6sEr8EcULP&
dimension=g4LJbkM0R24&dimension=ttjZl7jvrRj&dimension=v24me96F6XA&dimension=Za0xkyQDpxA&
dimension=oVFYcqtwPY9&dimension=KxosXJrC3bh&dimension=Rx2fEI9zDJ3&dimension=Fs892x4qy0d&
dimension=P2gE4lKybQG&dimension=CvJsiC7uXFY&dimension=JTWovJaXgxS&dimension=s52IJ2zlEol&
dimension=IuwaCGsUr7w&dimension=jMlpubCBAqQ&dimension=TzqawmlPkI5&dimension=oomj0HzoQB5&
dimension=oPEL0yUsFJ6&dimension=mW7DtDdQBv3&dimension=v4bkZ9UZsXr&dimension=tVntAinnj0j&
dimension=y4oilvA8mVy&dimension=ymPAOiwkqT0&dimension=ypw02tLMPFQ&dimension=nsohnMrNmaF&
dimension=HcxURmewqhC&dimension=X30kPftDe6M&dimension=kWrFMAyg6Wd&dimension=qIjb1K7RBSQ&
dimension=OO9CGZqnlHg&dimension=aWmPaghPPiX&dimension=USNWlaqJYfj&dimension=SwPVr4XgPpH&
dimension=o7djkXfYZQH&dimension=xKuGAfa9VwT&dimension=oREeMbJdOOi&dimension=B459pxTvHeR&
dimension=LnR3mUby5q3&dimension=fFfdr1uvr8O&dimension=s3eoonJ8OJb&dimension=z38VCNZh0qV&
dimension=lRpToX3dhff&dimension=Nedj4eHxkDA&dimension=oR1I0GFQLeB&dimension=m7MH14roDiB&
dimension=jBkw8u7sVkG&dimension=bo5e2Y6HPK3&dimension=dA6OfHRlWwB&dimension=t1PAsSxkv0e&
dimension=R7pCw3iE9KA&dimension=a9a5FvQ1mlS&dimension=Ok06T0bZnQP&dimension=qZbnrWP7sAc&
dimension=grMYEotvVoG&dimension=EcvciwIVAtL&dimension=IUFQDU68rS6&dimension=hCZ3F0EuzdS&
dimension=VdiTxORMZ24&dimension=NxFYllr5RpU&dimension=fAefJDDlCgz&dimension=sb4e0RdaCy1&
dimension=xUX5BfGUHjG&dimension=sJeIFfhX8BE&dimension=TRanjlwhC84&dimension=zkzuwNw4Aq0&
dimension=coUb4QcuVKI&dimension=SBRCbEvwCjZ&dimension=j6LrBVzW3k4&dimension=TMwKRNAYuYB&
dimension=IGQdwCEWqxs&dimension=hcHUkwpjcDc&dimension=DbbrWq4rFPh&dimension=IliCwhlgfJq&
dimension=UmXYz5bN9is&dimension=uNNfUKaj0gY&dimension=AHlLUcC9l3T&dimension=tAqxn8xSJG5&
dimension=OY35IARTLYJ&dimension=eB3mTHxMtLe&dimension=bPBdafWqhyg&dimension=jSCr3wfmnzH&
dimension=BGIl7Un4Far&dimension=E4Z7JQV0QFt&dimension=kJHY6C05MoS&stage=ChsOd5Hb5hA&displayProperty=NAME&
outputType=EVENT&desc=eventdate&paging=false]"
eIDSRurl<-URLencode(paste0(urlA,urlB))
IDSR_raw<-httr::GET(eIDSRurl, httr::authenticate(usr,psw)) %>%
httr::content("text") %>%
jsonlite::fromJSON(flatten = TRUE)
cnames<-IDSR_raw$headers[[2]] #Extract column names
IDSR_df<-as.data.frame(IDSR_raw$rows) #Extract data content
names(IDSR_df)<-cnames #Add column names
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District)) %>%
mutate(District=ifelse(District %in% "Kampala" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District))
# Suspects by district (for map)
dist_sum<-tbl_df(data.frame(table(IDSR_df$District))) %>%
separate(Var1,c("DistName",NA)) %>%
group_by(DistName) %>%
summarize(Freq=sum(Freq)) %>%
mutate_all(funs(toupper)) %>%
rename(DName2019=DistName)
#Trend line data
counts<- data.frame(table(IDSR_df$`Date of symptoms onset`))
counts$Var1<-as.Date(counts$Var1)
#Preparing Map data
ug_map<-rgdal::readOGR("./datasources/uganda_districts_2019_i.shp")
ug_map@data <- as.data.frame(apply(ug_map@data, 2, function(x) iconv(x, "latin1", "UTF-8"))) %>%
merge(dist_sum, by = "DName2019", all = TRUE)
cut <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150, 200))
ug_map$cut<- cut
colors <- colorRampPalette(brewer.pal(9, "YlGnBu"))(6)
cutColors <- cut(as.numeric(ug_map1$Freq), breaks = c(0, 25, 50, 75, 100, 150,200), labels = colors)
ug_map$colors<-cutColors
IDSR_df<-tbl_df(IDSR_df)%>%
select("Organisation unit name", "Organisation unit",
"System Generated Case ID","Case/Patient/Lab No":Gender,
"Age (years)":"District/Sub-county", "COVID_Has the patient travelled in the 14 days prior to symptom onset?":
"v3: Has the patient had close contact  with a person with acute respiratory infection in the 14 days prior to symptom onset? ",
"COVID_Health care setting (probable/confirmed)":"v3: Date of death, if applicable") %>%
separate("District/Sub-county", c("District", "Sub-county"), sep = " : ")%>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="1 Test Facility","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mulago National Referral Hospital","Kampala District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Wakiso District","Wakiso District",District)) %>%
mutate(District=ifelse(District %in% "" & IDSR_df$`Organisation unit name`=="Mukono District","Mukono District",District)) %>%
mutate(District=ifelse(District %in% "Kampala" & IDSR_df$`Organisation unit name`=="Kampala District","Kampala District",District))
View(IDSR_df)
IDSR_df<-as.data.frame(IDSR_raw$rows) names(IDSR_df)<-cnames
IDSR_df<-as.data.frame(IDSR_raw$rows)
names(IDSR_df)<-cnames
View(IDSR_df)
